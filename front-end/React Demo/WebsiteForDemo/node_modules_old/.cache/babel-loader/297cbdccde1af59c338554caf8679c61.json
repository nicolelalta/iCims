{"ast":null,"code":"var _jsxFileName = \"/Users/evee/Desktop/icims-app-cs/icims-app-cs/src/account/createAccount/createAccountForm.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\n/* eslint-disable */\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass CreateAcccountForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      console.log(\"onSubmit state\", this.state);\n      const {\n        firstName,\n        lastName,\n        userName,\n        email,\n        password\n      } = this.state;\n      fetch(\"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"text/html\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: {\n          firstName,\n          lastName,\n          userName,\n          email,\n          password\n        }\n      });\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 2 ? \"minimum 2 characters required\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastName = value.length < 2 ? \"minimum 2 characters required\" : \"\";\n          break;\n\n        case \"userName\":\n          formErrors.userName = value.length < 2 ? \"minimum 2 characters required\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"minimum 6 characters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      selectedFile: null\n    };\n\n    this.fileSelectedHandler = event => {\n      console.log(event.target.files[0]); //LOGS THE SELECTED FILE\n\n      this.setState({\n        //SELECTS THE FILE\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.fileUploadHandler = () => {\n      //UPLOADING THE SELECTED FILE USING FORM DATA\n      const fd = new FormData();\n      fd.append(\"image\", this.state.selectedFile, this.state.selectedFile.name);\n      Axios.post(\"\", fd, {\n        //LOCATION TO POST TO (place location between quotes)\n        onUploadProgress: progressEvent => {\n          console.log(\"Image Upload Progress: \" + Math.round(progressEvent.loaded / progressEvent.total * 100) + \"%\");\n        }\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        userName: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  } // hello\n  // async componentDidMount() {\n  //   const url =\n  //     \"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\";\n  //   const response = await fetch(url);\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n\n\n  //FORM DATA\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Create an Account\"), React.createElement(\"form\", {\n      className: \"account-form\",\n      onSubmit: this.onSubmit,\n      noValidate: true,\n      method: \"POST\",\n      action: \"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: formErrors.firstName.length > 0 ? \"error\" : null,\n      placeholder: \"First Name\",\n      type: \"text\",\n      name: \"firstName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), formErrors.firstName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, formErrors.firstName)), React.createElement(\"div\", {\n      className: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: formErrors.lastName.length > 0 ? \"error\" : null,\n      placeholder: \"Last Name\",\n      type: \"text\",\n      name: \"lastName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, formErrors.lastName)), React.createElement(\"div\", {\n      className: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: formErrors.userName.length > 0 ? \"error\" : null,\n      placeholder: \"Username\",\n      type: \"text\",\n      name: \"userName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), formErrors.userName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, formErrors.userName)), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Upload Profile Image\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.fileSelectedHandler //PICKING AN IMAGE\n      ,\n      ref: fileInput => this.fileInput = fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.fileUploadHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \" Upload \")), \";\", React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Already have an account?\", React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \" Sign in\"))))))); //return\n  } //render\n\n\n} //app component\n\n\nexport default CreateAcccountForm;","map":{"version":3,"sources":["/Users/evee/Desktop/icims-app-cs/icims-app-cs/src/account/createAccount/createAccountForm.js"],"names":["React","Component","Axios","Link","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","CreateAcccountForm","constructor","props","onSubmit","event","preventDefault","console","log","state","firstName","lastName","userName","email","password","fetch","method","headers","Accept","body","handleChange","e","name","value","target","test","setState","selectedFile","fileSelectedHandler","files","fileUploadHandler","fd","FormData","append","post","onUploadProgress","progressEvent","Math","round","loaded","total","then","res","render","fileInput"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\n/* eslint-disable */\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\nclass CreateAcccountForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        userName: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n  // hello\n  // async componentDidMount() {\n  //   const url =\n  //     \"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\";\n\n  //   const response = await fetch(url);\n  //   const data = await response.json();\n  //   console.log(data);\n  // }\n\n  onSubmit = event => {\n    event.preventDefault();\n    console.log(\"onSubmit state\", this.state);\n\n    const { firstName, lastName, userName, email, password } = this.state;\n\n    fetch(\n      \"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\",\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"text/html\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: { firstName, lastName, userName, email, password }\n      }\n    );\n  };\n\n  // handleSubmit = e => {\n  //   e.preventDefault();\n\n  //   if (formValid(this.state)) {\n  //     console.log(`\n  //       --SUBMITTING--\n  //       First Name: ${this.state.firstName}\n  //       Last Name: ${this.state.lastName}\n  //       Username: ${this.state.userName}\n  //       Email: ${this.state.email}\n  //       Password: ${this.state.password}\n  //     `);\n  //   } else {\n  //     console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n  //   }\n  // };\n\n  handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"firstName\":\n        formErrors.firstName =\n          value.length < 2 ? \"minimum 2 characters required\" : \"\";\n        break;\n      case \"lastName\":\n        formErrors.lastName =\n          value.length < 2 ? \"minimum 2 characters required\" : \"\";\n        break;\n      case \"userName\":\n        formErrors.userName =\n          value.length < 2 ? \"minimum 2 characters required\" : \"\";\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 ? \"minimum 6 characters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n  state = {\n    selectedFile: null\n  };\n  fileSelectedHandler = event => {\n    console.log(event.target.files[0]); //LOGS THE SELECTED FILE\n\n    this.setState({\n      //SELECTS THE FILE\n      selectedFile: event.target.files[0]\n    });\n  };\n  fileUploadHandler = () => {\n    //UPLOADING THE SELECTED FILE USING FORM DATA\n    const fd = new FormData();\n    fd.append(\"image\", this.state.selectedFile, this.state.selectedFile.name);\n    Axios.post(\"\", fd, {\n      //LOCATION TO POST TO (place location between quotes)\n      onUploadProgress: progressEvent => {\n        console.log(\n          \"Image Upload Progress: \" +\n            Math.round((progressEvent.loaded / progressEvent.total) * 100) +\n            \"%\"\n        );\n      }\n    }).then(res => {\n      console.log(res);\n    });\n  };\n  //FORM DATA\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"form-wrapper\">\n          <h1>Create an Account</h1>\n          <form\n            className=\"account-form\"\n            onSubmit={this.onSubmit}\n            noValidate\n            method=\"POST\"\n            action=\"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\"\n          >\n            <div className=\"firstName\">\n              <label className=\"label\" htmlFor=\"firstName\"></label>\n              <input\n                className={formErrors.firstName.length > 0 ? \"error\" : null}\n                placeholder=\"First Name\"\n                type=\"text\"\n                name=\"firstName\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.firstName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.firstName}</span>\n              )}\n            </div>\n            <div className=\"lastName\">\n              <label className=\"label\" htmlFor=\"lastName\"></label>\n              <input\n                className={formErrors.lastName.length > 0 ? \"error\" : null}\n                placeholder=\"Last Name\"\n                type=\"text\"\n                name=\"lastName\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.lastName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.lastName}</span>\n              )}\n            </div>\n            <div className=\"userName\">\n              <label className=\"label\" htmlFor=\"userName\"></label>\n              <input\n                className={formErrors.userName.length > 0 ? \"error\" : null}\n                placeholder=\"Username\"\n                type=\"text\"\n                name=\"userName\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.userName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.userName}</span>\n              )}\n            </div>\n            <div className=\"email\">\n              <label className=\"label\" htmlFor=\"email\"></label>\n              <input\n                className={formErrors.email.length > 0 ? \"error\" : null}\n                placeholder=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.email.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.email}</span>\n              )}\n            </div>\n            <div className=\"password\">\n              <label className=\"label\" htmlFor=\"password\"></label>\n              <input\n                className={formErrors.password.length > 0 ? \"error\" : null}\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.password.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.password}</span>\n              )}\n            </div>\n            <div className=\"App\">\n              <small>Upload Profile Image</small>\n              <div></div>\n              <input\n                type=\"file\"\n                onChange={this.fileSelectedHandler} //PICKING AN IMAGE\n                ref={fileInput => (this.fileInput = fileInput)}\n              />\n              {/* <button onClick={() => this.fileInput.click()}>Pick File</button> */}\n              <button onClick={this.fileUploadHandler}> Upload </button>\n            </div>\n            ;\n            <div className=\"createAccount\">\n              <button type=\"submit\">Continue</button>\n\n              <small>\n                Already have an account?\n                <Link to=\"/login\">\n                  <a> Sign in</a>\n                </Link>\n              </small>\n            </div>\n          </form>\n        </div>\n      </div>\n    ); //return\n  } //render\n} //app component\n\nexport default CreateAcccountForm;\n"]},"metadata":{},"sourceType":"module"}