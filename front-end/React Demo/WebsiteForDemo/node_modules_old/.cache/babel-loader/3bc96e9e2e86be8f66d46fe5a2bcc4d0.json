{"ast":null,"code":"var _jsxFileName = \"/Users/evee/Desktop/icims-app-cs/icims-app-cs/src/account/createAccount/createAccountForm.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\"; // import { Link } from \"react-router-dom\";\n// import \"App.css\";\n\n/* eslint-disable */\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass CreateAcccountForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      event.preventDefault();\n      const {\n        firstName,\n        lastName,\n        userName,\n        email,\n        password\n      } = this.state; // let bodyFormData = new FormData();\n      // bodyFormData.set(firstName, lastName, userName, email, password);\n\n      Axios({\n        method: \"post\",\n        url: \"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\",\n        body: {\n          firstName,\n          lastName,\n          userName,\n          email,\n          password\n        },\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n      Axios.post(\"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\", firstName, lastName, userName, email, password).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 2 ? \"minimum 2 characters required\" : \"\";\n          break;\n\n        case \"lastName\":\n          formErrors.lastName = value.length < 2 ? \"minimum 2 characters required\" : \"\";\n          break;\n\n        case \"userName\":\n          formErrors.userName = value.length < 2 ? \"minimum 2 characters required\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"minimum 6 characters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      selectedFile: null\n    };\n\n    this.fileSelectedHandler = event => {\n      console.log(event.target.files[0]); //LOGS THE SELECTED FILE\n\n      this.setState({\n        //SELECTS THE FILE\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.fileUploadHandler = () => {\n      //UPLOADING THE SELECTED FILE USING FORM DATA\n      const fd = new FormData();\n      fd.append(\"image\", this.state.selectedFile, this.state.selectedFile.name);\n      Axios.post(\"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\", fd, {\n        //LOCATION TO POST TO (place location between quotes)\n        onUploadProgress: progressEvent => {\n          console.log(\"Image Upload Progress: \" + Math.round(progressEvent.loaded / progressEvent.total * 100) + \"%\");\n        }\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        userName: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  //FORM DATA\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Create an Account\"), React.createElement(\"form\", {\n      className: \"account-form\",\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"firstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: formErrors.firstName.length > 0 ? \"error\" : null,\n      placeholder: \"First Name\",\n      type: \"text\",\n      name: \"firstName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), formErrors.firstName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, formErrors.firstName)), React.createElement(\"div\", {\n      className: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"lastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: formErrors.lastName.length > 0 ? \"error\" : null,\n      placeholder: \"Last Name\",\n      type: \"text\",\n      name: \"lastName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, formErrors.lastName)), React.createElement(\"div\", {\n      className: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"userName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: formErrors.userName.length > 0 ? \"error\" : null,\n      placeholder: \"Username\",\n      type: \"text\",\n      name: \"userName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), formErrors.userName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, formErrors.userName)), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Upload Profile Image\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.fileSelectedHandler //PICKING AN IMAGE\n      ,\n      ref: fileInput => this.fileInput = fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.fileUploadHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \" Upload \")), React.createElement(\"div\", {\n      className: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Continue\"), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Already have an account?\"))))); //return\n  } //render\n\n\n} //app component\n\n\nexport default CreateAcccountForm;","map":{"version":3,"sources":["/Users/evee/Desktop/icims-app-cs/icims-app-cs/src/account/createAccount/createAccountForm.js"],"names":["React","Component","Axios","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","CreateAcccountForm","constructor","props","handleSubmit","e","event","preventDefault","firstName","lastName","userName","email","password","state","method","url","body","headers","post","then","res","console","log","data","handleChange","name","value","target","test","setState","selectedFile","fileSelectedHandler","files","fileUploadHandler","fd","FormData","append","onUploadProgress","progressEvent","Math","round","loaded","total","render","fileInput"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Axios from \"axios\";\n// import { Link } from \"react-router-dom\";\n// import \"App.css\";\n/* eslint-disable */\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\nclass CreateAcccountForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        userName: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  handleSubmit = e => {\n    event.preventDefault();\n\n    const { firstName, lastName, userName, email, password } = this.state;\n\n    // let bodyFormData = new FormData();\n\n    // bodyFormData.set(firstName, lastName, userName, email, password);\n    Axios({\n      method: \"post\",\n      url:\n        \"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\",\n      body: {\n        firstName,\n        lastName,\n        userName,\n        email,\n        password\n      },\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n    });\n\n    Axios.post(\n      \"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\",\n      firstName,\n      lastName,\n      userName,\n      email,\n      password\n    ).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n  };\n\n  handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"firstName\":\n        formErrors.firstName =\n          value.length < 2 ? \"minimum 2 characters required\" : \"\";\n        break;\n      case \"lastName\":\n        formErrors.lastName =\n          value.length < 2 ? \"minimum 2 characters required\" : \"\";\n        break;\n      case \"userName\":\n        formErrors.userName =\n          value.length < 2 ? \"minimum 2 characters required\" : \"\";\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 ? \"minimum 6 characters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n  state = {\n    selectedFile: null\n  };\n  fileSelectedHandler = event => {\n    console.log(event.target.files[0]); //LOGS THE SELECTED FILE\n\n    this.setState({\n      //SELECTS THE FILE\n      selectedFile: event.target.files[0]\n    });\n  };\n  fileUploadHandler = () => {\n    //UPLOADING THE SELECTED FILE USING FORM DATA\n    const fd = new FormData();\n    fd.append(\"image\", this.state.selectedFile, this.state.selectedFile.name);\n    Axios.post(\n      \"https://b0sq8n7q17.execute-api.us-east-1.amazonaws.com/createAccount\",\n      fd,\n      {\n        //LOCATION TO POST TO (place location between quotes)\n        onUploadProgress: progressEvent => {\n          console.log(\n            \"Image Upload Progress: \" +\n              Math.round((progressEvent.loaded / progressEvent.total) * 100) +\n              \"%\"\n          );\n        }\n      }\n    ).then(res => {\n      console.log(res);\n    });\n  };\n  //FORM DATA\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"form-wrapper\">\n          <h1>Create an Account</h1>\n          <form\n            className=\"account-form\"\n            onSubmit={this.handleSubmit}\n            noValidate\n          >\n            <div className=\"firstName\">\n              <label className=\"label\" htmlFor=\"firstName\"></label>\n              <input\n                className={formErrors.firstName.length > 0 ? \"error\" : null}\n                placeholder=\"First Name\"\n                type=\"text\"\n                name=\"firstName\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.firstName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.firstName}</span>\n              )}\n            </div>\n            <div className=\"lastName\">\n              <label className=\"label\" htmlFor=\"lastName\"></label>\n              <input\n                className={formErrors.lastName.length > 0 ? \"error\" : null}\n                placeholder=\"Last Name\"\n                type=\"text\"\n                name=\"lastName\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.lastName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.lastName}</span>\n              )}\n            </div>\n            <div className=\"userName\">\n              <label className=\"label\" htmlFor=\"userName\"></label>\n              <input\n                className={formErrors.userName.length > 0 ? \"error\" : null}\n                placeholder=\"Username\"\n                type=\"text\"\n                name=\"userName\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.userName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.userName}</span>\n              )}\n            </div>\n            <div className=\"email\">\n              <label className=\"label\" htmlFor=\"email\"></label>\n              <input\n                className={formErrors.email.length > 0 ? \"error\" : null}\n                placeholder=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.email.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.email}</span>\n              )}\n            </div>\n            <div className=\"password\">\n              <label className=\"label\" htmlFor=\"password\"></label>\n              <input\n                className={formErrors.password.length > 0 ? \"error\" : null}\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.password.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.password}</span>\n              )}\n            </div>\n            <div className=\"App\">\n              <small>Upload Profile Image</small>\n              <div></div>\n              <input\n                type=\"file\"\n                onChange={this.fileSelectedHandler} //PICKING AN IMAGE\n                ref={fileInput => (this.fileInput = fileInput)}\n              />\n              {/* <button onClick={() => this.fileInput.click()}>Pick File</button> */}\n              <button onClick={this.fileUploadHandler}> Upload </button>\n            </div>\n\n            <div className=\"createAccount\">\n              <button type=\"submit\">Continue</button>\n\n              <small>\n                Already have an account?\n                {/* <Link to=\"/login\">\n                  <a> Sign in</a>\n                </Link> */}\n              </small>\n            </div>\n          </form>\n        </div>\n      </div>\n    ); //return\n  } //render\n} //app component\n\nexport default CreateAcccountForm;\n"]},"metadata":{},"sourceType":"module"}